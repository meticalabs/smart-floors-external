[project]
name = "bid-optim-etl-py"
version = "1.2.0"
description = "Implementation of bid floor optimisation training and inference"
authors = [
    { name = "Subash Prabanantham", email = "subash@metica.com" },
    { name = "Rowan Swiers", email = "rowan@metica.com" },
    { name = "Andrew Maher", email = "andrew@metica.com" },
]
requires-python = ">=3.10,<3.12"
readme = "README.md"
dependencies = [
    "ray[all]==2.47.1",
    "pyspark==3.4.3",
    "numpy==1.26.4",
    "xgboost==2.1.4",
    "boto3~=1.34",
    "pyiceberg[glue]>=0.9.0,<0.10",
    "joblib>=1.4.2",
    "setuptools>=80.9.0",
    "etl-py-commons @ git+https://github.com/meticalabs/etl-py-commons.git",
    "pydantic>=2.11.5",
]

[dependency-groups]
dev = [
    "ruff==0.0.291",
    "black>=23.9.1,<24",
    "pytest>=7.4.0",
    "pytest-cov>=5.0.0",
    "pytest-xdist>=3.3.1"
]
test = [
    "coverage==7.3.1",
    "pytest==7.4.0",
    "pytest-order>=1.2.1,<2",
    "pytest-xdist>=3.3.1"
]

[tool.uv]
default-groups = [
    "dev",
    "test",
]

[tool.hatch.build.targets.sdist]
include = ["bid_optim_etl_py"]

[tool.hatch.build.targets.wheel]
include = ["bid_optim_etl_py"]

[tool.hatch.metadata]
allow-direct-references = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 120
target-version = ["py37", "py38", "py39", "py310"]
extend-exclude = '''
/(
    tests/.*  # Exclude all files in the tests directory
    | docs/.*  # Exclude all files in the docs directory
    | tools/.*  # Exclude all files in the tools directory
)
'''

[tool.coverage.run]
branch = true
omit = [".*", "*/site-packages/*", "tests/*", "*/gen/*"]

[tool.coverage.paths]
source = [
    "bid_optim_etl_py/"
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]

ignore_errors = true

[tool.coverage.html]
directory = "tests/coverage"

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
line-length = 120

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402"]
