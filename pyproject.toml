[tool.poetry]
name = "bid-optim-etl-py"
version = "0.1.0"
description = "Implementation of bid floor optimisation training and inference"
authors = ["Subash Prabanantham <subash@metica.com>", "Rowan Swiers <rowan@metica.com>", "Andrew Maher <andrew@metica.com>"]
readme = "README.md"
packages = [{ include = "bid_optim_etl_py" }]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
ray = { version = "2.44.1", extras = ["all"] }
pyspark = "3.4.3"
modin = { extras = ["all"], version = "^0.32" }
scikit_learn = "1.2.2"
numpy = "1.26.4"
xgboost = "2.1.4"
awswrangler = "3.11.0"
matplotlib = "^3.10.1"
boto3 = "^1.34"
pyiceberg = { extras = ["glue"], version = "^0.9.0" }

[tool.poetry.group.dev.dependencies]
ruff = "0.0.291"
black = "^23.9.1"

[tool.poetry.group.test.dependencies]
coverage = "7.3.1"
pytest = "7.4.0"
pytest-order = "^1.2.1"

[tool.black]
line-length = 120
target-version = ["py37", "py38", "py39", "py310"]
extend-exclude = '''
/(
    tests/.*  # Exclude all files in the tests directory
    | docs/.*  # Exclude all files in the docs directory
    | tools/.*  # Exclude all files in the tools directory
)
'''

[tool.coverage.run]
branch = true
omit = [".*", "*/site-packages/*", "tests/*"]

[tool.coverage.paths]
source = [
    "bid_optim_etl_py/"
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]

ignore_errors = true

[tool.coverage.html]
directory = "tests/coverage"

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
line-length = 120

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"